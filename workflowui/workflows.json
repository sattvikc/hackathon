[{"model": "workflows.workflow", "pk": 1, "fields": {"name": "Example001", "description": "Single task workflow. Connects to localhost using ssh and executes uname -a. Once run, output should be available in the outputs section of the monitor. Refresh the monitor page until the task shows up as successful. (We didn't implement the auto refresh.)", "definition": "{\"description\":\"Single task workflow. Connects to localhost using ssh and executes uname -a. Once run, output should be available in the outputs section of the monitor. Refresh the monitor page until the task shows up as successful. (We didn't implement the auto refresh.)\",\"tasks\":[{\"inputs\":[{\"name\":\"username\",\"key\":\"sattvik\",\"src\":\"value\"},{\"name\":\"password\",\"key\":\"hackathonvm\",\"src\":\"value\"},{\"name\":\"host\",\"key\":\"localhost\",\"src\":\"value\"},{\"name\":\"command\",\"key\":\"uname -a\",\"src\":\"value\"}],\"def\":\"builtin.remote.exec.command\",\"ui\":{\"port_spacing\":20,\"port_hover_radius\":6,\"x\":136,\"port_radius\":4,\"selected\":false,\"y\":153,\"height\":80,\"width\":250},\"dependencies\":[],\"name\":\"Exec001\",\"outputs\":[\"stdout\",\"stderr\",\"exit_status\"]}],\"name\":\"Example001\"}"}}, {"model": "workflows.workflow", "pk": 2, "fields": {"name": "Example002", "description": "A simple dependency example. This workflow performs (a+b) squared using dependency. Also, a and b values would be taken from the properties during the run of the workflow.", "definition": "{\"description\":\"A simple dependency example. This workflow performs (a+b) squared using dependency. Also, a and b values would be taken from the properties during the run of the workflow.\",\"tasks\":[{\"inputs\":[{\"key\":\"a\",\"name\":\"a\",\"src\":\"properties\"},{\"key\":\"b\",\"name\":\"b\",\"src\":\"properties\"},{\"key\":\"x = int(a) + int(b)\",\"name\":\"code\",\"src\":\"value\"}],\"def\":\"builtin.utility.pycode\",\"name\":\"Adder\",\"dependencies\":[],\"ui\":{\"y\":84,\"width\":250,\"port_hover_radius\":6,\"selected\":false,\"x\":125,\"height\":80,\"port_spacing\":20,\"port_radius\":4},\"outputs\":[\"x\"]},{\"inputs\":[{\"key\":\"Adder.x\",\"name\":\"x\",\"src\":\"taskout\"},{\"key\":\"Adder.x\",\"name\":\"y\",\"src\":\"taskout\"},{\"key\":\"answer = int(x) * int(y) \",\"name\":\"code\",\"src\":\"value\"}],\"def\":\"builtin.utility.pycode\",\"name\":\"Multiplier\",\"dependencies\":[\"Adder\"],\"ui\":{\"y\":212,\"width\":250,\"port_hover_radius\":6,\"selected\":false,\"x\":464,\"height\":80,\"port_spacing\":20,\"port_radius\":4},\"outputs\":[\"answer\"]}],\"name\":\"Example002\"}"}}, {"model": "workflows.workflow", "pk": 3, "fields": {"name": "Example003", "description": "A dummy workflow with cyclic dependency. Observe the tasks that get skipped.", "definition": "{\"description\":\"A dummy workflow with cyclic dependency. Observe the tasks that get skipped.\",\"tasks\":[{\"inputs\":[],\"def\":\"builtin.dummy\",\"name\":\"Task01\",\"dependencies\":[],\"ui\":{\"y\":86,\"width\":250,\"port_hover_radius\":6,\"selected\":false,\"x\":99,\"height\":80,\"port_spacing\":20,\"port_radius\":4},\"outputs\":[]},{\"inputs\":[],\"def\":\"builtin.dummy\",\"name\":\"Task02\",\"dependencies\":[\"Task01\",\"Task04\"],\"ui\":{\"y\":244,\"width\":250,\"port_hover_radius\":6,\"selected\":false,\"x\":417,\"height\":80,\"port_spacing\":20,\"port_radius\":4},\"outputs\":[]},{\"inputs\":[],\"def\":\"builtin.dummy\",\"name\":\"Task03\",\"dependencies\":[\"Task02\"],\"ui\":{\"y\":246,\"width\":250,\"port_hover_radius\":6,\"selected\":false,\"x\":720,\"height\":80,\"port_spacing\":20,\"port_radius\":4},\"outputs\":[]},{\"inputs\":[],\"def\":\"builtin.dummy\",\"name\":\"Task04\",\"dependencies\":[\"Task03\"],\"ui\":{\"y\":522,\"width\":250,\"port_hover_radius\":6,\"selected\":false,\"x\":584,\"height\":80,\"port_spacing\":20,\"port_radius\":4},\"outputs\":[]}],\"name\":\"Example003\"}"}}, {"model": "workflows.workflow", "pk": 4, "fields": {"name": "Example004", "description": "A realistic deploy application. Clearing all the docker images. Then, spawn a new docker image and test it.", "definition": "{\"tasks\":[{\"inputs\":[{\"key\":\"sattvik\",\"name\":\"username\",\"src\":\"value\"},{\"key\":\"hackathonvm\",\"name\":\"password\",\"src\":\"value\"},{\"key\":\"localhost\",\"name\":\"host\",\"src\":\"value\"},{\"key\":\"#!/bin/bash\\n# Delete all containers\\ndocker rm $(docker ps -a -q)\\n# Delete all images\\ndocker rmi $(docker images -q)\",\"name\":\"script\",\"src\":\"value\"}],\"outputs\":[\"stdout\",\"stderr\",\"exit_status\"],\"ui\":{\"port_hover_radius\":6,\"height\":80,\"port_spacing\":20,\"selected\":false,\"x\":30,\"y\":217,\"width\":250,\"port_radius\":4},\"dependencies\":[],\"name\":\"ClearDockerImages\",\"def\":\"builtin.remote.exec.script\"},{\"inputs\":[{\"key\":\"sattvik\",\"name\":\"username\",\"src\":\"value\"},{\"key\":\"hackathonvm\",\"name\":\"password\",\"src\":\"value\"},{\"key\":\"localhost\",\"name\":\"host\",\"src\":\"value\"},{\"key\":\"docker run --name some-nginx -d -p 8080:80 nginx\",\"name\":\"command\",\"src\":\"value\"}],\"outputs\":[\"stdout\",\"stderr\",\"exit_status\"],\"ui\":{\"port_hover_radius\":6,\"height\":80,\"port_spacing\":20,\"selected\":false,\"x\":325,\"y\":67,\"width\":250,\"port_radius\":4},\"dependencies\":[\"ClearDockerImages\"],\"name\":\"SpawnNginx\",\"def\":\"builtin.remote.exec.command\"},{\"inputs\":[{\"key\":\"sattvik\",\"name\":\"username\",\"src\":\"value\"},{\"key\":\"hackathonvm\",\"name\":\"password\",\"src\":\"value\"},{\"key\":\"localhost\",\"name\":\"host\",\"src\":\"value\"},{\"key\":\"curl localhost:8080 \",\"name\":\"command\",\"src\":\"value\"}],\"outputs\":[\"stdout\",\"stderr\",\"exit_status\"],\"ui\":{\"port_hover_radius\":6,\"height\":80,\"port_spacing\":20,\"selected\":false,\"x\":607,\"y\":272,\"width\":250,\"port_radius\":4},\"dependencies\":[\"ClearDockerImages\",\"SpawnNginx\"],\"name\":\"Curl\",\"def\":\"builtin.remote.exec.command\"},{\"inputs\":[{\"key\":\"sattvik\",\"name\":\"username\",\"src\":\"value\"},{\"key\":\"hackathonvm\",\"name\":\"password\",\"src\":\"value\"},{\"key\":\"localhost\",\"name\":\"host\",\"src\":\"value\"},{\"key\":\"docker stop some-nginx && docker ps\",\"name\":\"command\",\"src\":\"value\"}],\"outputs\":[\"stdout\",\"stderr\",\"exit_status\"],\"ui\":{\"port_hover_radius\":6,\"height\":80,\"port_spacing\":20,\"selected\":false,\"x\":957,\"y\":55,\"width\":250,\"port_radius\":4},\"dependencies\":[\"SpawnNginx\",\"Curl\"],\"name\":\"StopInstance\",\"def\":\"builtin.remote.exec.command\"},{\"inputs\":[{\"key\":\"content_length = len(instr)\",\"name\":\"code\",\"src\":\"value\"},{\"key\":\"Curl.stdout\",\"name\":\"instr\",\"src\":\"taskout\"}],\"outputs\":[\"content_length\"],\"ui\":{\"port_hover_radius\":6,\"height\":80,\"port_spacing\":20,\"selected\":false,\"x\":978,\"y\":459,\"width\":250,\"port_radius\":4},\"dependencies\":[\"Curl\"],\"name\":\"CountOutputLength\",\"def\":\"builtin.utility.pycode\"}],\"description\":\"A realistic deploy application. Clearing all the docker images. Then, spawn a new docker image and test it.\",\"name\":\"Example004\"}"}}]